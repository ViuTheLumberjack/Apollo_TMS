# Generated by Django 4.2.1 on 2023-05-28 13:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subtasks', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.task')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'tasks',
                'db_table': 'task',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeadlineTask',
            fields=[
                ('task_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tasks.task')),
                ('due_date', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Deadline Task',
                'verbose_name_plural': 'Deadline Tasks',
                'db_table': 'deadline-tasks',
                'ordering': ['-created_at'],
            },
            bases=('tasks.task',),
        ),
        migrations.CreateModel(
            name='OneTimeTask',
            fields=[
                ('task_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tasks.task')),
            ],
            options={
                'verbose_name': 'One Time Task',
                'verbose_name_plural': 'One Time Tasks',
                'db_table': 'one-time-tasks',
                'ordering': ['-created_at'],
            },
            bases=('tasks.task',),
        ),
        migrations.CreateModel(
            name='RecurrentTask',
            fields=[
                ('task_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tasks.task')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('frequency', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Recurrent Task',
                'verbose_name_plural': 'Recurrent Tasks',
                'db_table': 'recurrent-tasks',
                'ordering': ['-created_at'],
            },
            bases=('tasks.task',),
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tasks', models.ManyToManyField(to='tasks.task')),
            ],
            options={
                'verbose_name': 'Collection',
                'verbose_name_plural': 'Collections',
                'db_table': 'collections',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.task')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assignment',
                'verbose_name_plural': 'Assignments',
                'db_table': 'assignments',
                'ordering': ['-created_at'],
            },
        ),
    ]
